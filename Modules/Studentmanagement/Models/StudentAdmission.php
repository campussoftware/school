<?php/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * Description of AcdExaminationMarks * * @author ramesh */namespace Modules\Studentmanagement\Models;use Core\Model\Node;class StudentAdmission extends Node{    public $_studentId = NULL;    public $_emailId = NULL;    public $_mobileNo = NULL;    public $_password = NULL;    public $_countryId;    public $_stateId;    public $_cityId;    public $_firstName = NULL;    public $_lastName = NULL;    public $_academicYear=NULL;    public function setStudentId($studentId) {        $this->_studentId = $studentId;        return $this;    }    public function getStudentId() {        return $this->_studentId;    }     public function setEmailId($emailId) {        $this->_emailId = $emailId;        return $this;    }    public function getEmailId() {        return $this->_emailId;    }    public function setCountryId($countryId) {        $this->_countryId = $countryId;        return $this;    }    public function getCountryId() {        return $this->_countryId;    }    public function setStateId($stateId) {        $this->_stateId = $stateId;        return $this;    }    public function getStateId() {        return $this->_stateId;    }    public function setCityId($cityId) {        $this->_cityId = $cityId;        return $this;    }    public function getCityId() {        return $this->_cityId;    }    public function setFirstName($firstName) {        $this->_firstName = $firstName;        return $this;    }    public function getFirstName() {        return $this->_firstName;    }    public function setLastName($lastName) {        $this->_lastName = $lastName;        return $this;    }    public function getLastName() {        return $this->_lastName;    }    public function setMobileNo($mobileNo) {        $this->_mobileNo = $mobileNo;        return $this;    }    public function getMobileNo() {        return $this->_mobileNo;    }    public function setPinCode($pinCode) {        $this->_pinCode = $pinCode;        return $this;    }    public function getPinCode() {        return $this->_pinCode;    }    public function setAcademicyear($academicYear) {        $this->_academicYear = $academicYear;        return $this;    }    public function getAcademicyear() {        return $this->_academicYear;    }      public function getAllStudentList(){        $wp = new \Core\WebsiteSettings();        $nodeModel = \CoreClass::getModel($this->_nodeName);        $nodeModel->setNodeName($this->_nodeName);        $nodeModel->addCustomFieldToSelect("student_admission.id", "id");        $nodeModel->addCustomFieldToSelect("student_admission.admission_no", "admission_no");        $nodeModel->addCustomFieldToSelect("student_admission.roll_no", "roll_no");        $nodeModel->addCustomFieldToSelect("student_admission.first_name", "first_name");        $nodeModel->addCustomFieldToSelect("student_admission.last_name", "last_name");        $nodeModel->addCustomFieldToSelect("student_admission.name", "student_name");        $nodeModel->addCustomFieldToSelect("list_branch.name", "branch");        $nodeModel->addCustomFieldToSelect("cur_list_orientation.name", "course");        $nodeModel->addCustomFieldToSelect("cur_list_class.name", "classname");        $nodeModel->addCustomFieldToSelect("cur_branch_class_section.name", "section");        $nodeModel->addCustomFieldToSelect("student_admission.image", "image");        $nodeModel->addCustomFieldToSelect("student_admission.present_address", "address");        $nodeModel->addCustomFieldToSelect("student_admission.postalcode", "postalcode");        $nodeModel->addCustomFieldToSelect("core_country.name", "country");        $nodeModel->addCustomFieldToSelect("core_list_state.name", "state");        $nodeModel->addCustomFieldToSelect("core_list_city.name", "city");        $nodeModel->addCustomJoin("list_branch.id", "list_branch", "list_branch", "list_branch.id=student_admission.list_branch_id");        $nodeModel->addCustomJoin("cur_branch_orientation.id", "cur_branch_orientation", "cur_branch_orientation", "cur_branch_orientation.id=student_admission.cur_branch_orientation_id");        $nodeModel->addCustomJoin("cur_list_orientation.id", "cur_list_orientation", "cur_list_orientation", "cur_list_orientation.id=cur_branch_orientation.cur_list_orientation_id");        $nodeModel->addCustomJoin("cur_branch_class.id", "cur_branch_class", "cur_branch_class", "cur_branch_class.id=student_admission.cur_branch_class_id");        $nodeModel->addCustomJoin("cur_list_class.id", "cur_list_class", "cur_list_class", "cur_list_class.id=cur_branch_class.cur_list_class_id");        $nodeModel->addCustomJoin("cur_branch_class_section.id", "cur_branch_class_section", "cur_branch_class_section", "cur_branch_class_section.id=student_admission.cur_branch_class_section_id");        $nodeModel->addCustomJoin("core_country.id", "core_country", "core_country", "core_country.short_code=student_admission.core_country_id");        $nodeModel->addCustomJoin("core_list_state.id", "core_list_state", "core_list_state", "core_list_state.id=student_admission.core_list_state_id");        $nodeModel->addCustomJoin("core_list_city.id", "core_list_city", "core_list_city", "core_list_city.id=student_admission.core_list_city_id");                $nodeModel->getCollection();        $output = $nodeModel->_collections;        if(\Core::countArray($output)>0){            foreach ($output as $key => $value) {                    $this->_studentName = \Core::getValueFromArray($value, "student_name");                    $image = \Core::getValueFromArray($value, "image");                    if($image!="" && $image!="|||||"){                                             $output[\Core::getValueFromArray($value, "id")]["image"] = array("title"=>$this->_studentName,"image"=>\Core::getUploadPath()."student_images/".\Core::getValueFromArray($value, "image"));                   }else{                       $output[\Core::getValueFromArray($value, "id")]["image"] = $this->studentBlankImageAction();                   }            }        }                return $output;    }    public function studentBlankImageAction(){        $wp = new \Core\WebsiteSettings();        $data = [];        $data["title"] = $this->_studentName;        $data["image"] = $wp->websiteUrl."img/student_balnk_img.png";        return $data;    }    public function getStudentData(){        $nodeModel = \CoreClass::getModel($this->_nodeName);        $nodeModel->setNodeName($this->_nodeName);        $nodeModel->addCustomFieldToSelect("student_admission.id", "id");        $nodeModel->addCustomFieldToSelect("student_admission.admission_no", "admission_no");        $nodeModel->addCustomFieldToSelect("student_admission.roll_no", "roll_no");        $nodeModel->addCustomFieldToSelect("student_admission.first_name", "first_name");        $nodeModel->addCustomFieldToSelect("student_admission.last_name", "last_name");        $nodeModel->addCustomFieldToSelect("student_admission.cur_branch_class_id", "cur_branch_class_id");        $nodeModel->addCustomFieldToSelect("cur_list_class.id", "classId");        $nodeModel->addCustomJoin("cur_branch_class.id", "cur_branch_class", "cur_branch_class", "cur_branch_class.id=student_admission.cur_branch_class_id");        $nodeModel->addCustomJoin("cur_list_class.id", "cur_list_class", "cur_list_class", "cur_list_class.id=cur_branch_class.cur_list_class_id");        $nodeModel->addCustomFilter("student_admission.id='" . $this->getStudentId() . "' ");        $nodeModel->getCollection();        $output = $nodeModel->getRecord();        return $output;    }    public function profileDetails(){        $this->getStudentId();        $nodeModel = \CoreClass::getModel($this->_nodeName);        $nodeModel->setNodeName($this->_nodeName);        $nodeModel->addCustomFieldToSelect("id", "id");        $nodeModel->addCustomFieldToSelect("admission_no", "admission_no");        $nodeModel->addCustomFieldToSelect("roll_no", "roll_no");        $nodeModel->addCustomFieldToSelect("first_name", "first_name");        $nodeModel->addCustomFieldToSelect("last_name", "last_name");        $nodeModel->addCustomFilter("id='" . $this->getStudentId() . "' ");        $nodeModel->getCollection();        $output = $nodeModel->getRecord();        return $output;    }    public function getStudentDetails(){        $nodeModel = \CoreClass::getModel($this->_nodeName);        $nodeModel->setNodeName($this->_nodeName);        $nodeModel->addCustomFieldToSelect("student_admission.id", "id");        $nodeModel->addCustomFieldToSelect("student_admission.admission_no", "admission_no");        $nodeModel->addCustomFieldToSelect("student_admission.roll_no", "roll_no");        $nodeModel->addCustomFieldToSelect("student_admission.first_name", "first_name");        $nodeModel->addCustomFieldToSelect("student_admission.last_name", "last_name");        $nodeModel->addCustomFieldToSelect("student_admission.cur_branch_class_id", "cur_branch_class_id");        $nodeModel->addCustomFieldToSelect("cur_list_class.id", "classId");        $nodeModel->addCustomJoin("cur_branch_class.id", "cur_branch_class", "cur_branch_class", "cur_branch_class.id=student_admission.cur_branch_class_id");        $nodeModel->addCustomJoin("cur_list_class.id", "cur_list_class", "cur_list_class", "cur_list_class.id=cur_branch_class.cur_list_class_id");        $nodeModel->addCustomFilter("student_admission.id='" . $this->getStudentId() . "' ");        $nodeModel->getCollection();        $output = $nodeModel->getRecord();        return $output;    }    public function getStudentinfo(){                $nodeModel = \CoreClass::getModel($this->_nodeName);        $nodeModel->setNodeName($this->_nodeName);                $nodeModel->addCustomFilter("id='" . $this->getStudentId() . "' ");        $nodeModel->addCustomFilter("cur_list_academicyear_id='" . $this->getAcademicyear() . "' ");        $nodeModel->getCollection();        $output = $nodeModel->getRecord();        return $output;    }}